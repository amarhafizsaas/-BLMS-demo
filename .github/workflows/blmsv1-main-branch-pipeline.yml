name: blmsv1-main-branch-pipeline
on:
 push:
  branches:
   - 'main'
jobs:
 run-sonarqube-scan:
  name: Run SonarQube Scan
  runs-on: [self-hosted, onprem]

  steps:
   - uses: actions/checkout@v2.2.0
     with:
     # Disabling shallow clone is recommended for improving relevancy of sonarqube reporting
      fetch-depth: 0
   - name: Setup dotnet
     uses: actions/setup-dotnet@v1
     with:
      dotnet-version: '5.0.x'
   - name: Install dependencies
     run: dotnet restore
   - name: Sonarqube Begin
     run: dotnet /opt/sonar-scanner-msbuild-5.4.1.41282-net5.0/SonarScanner.MSBuild.dll begin /k:${{ secrets.SONAR_PROJECT_KEY }} /d:sonar.host.url=${{ secrets.SONAR_HOST_URL}} /d:sonar.login=${{ secrets.SONAR_TOKEN }} /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
   - name: Build
     run: dotnet build
   - name: Test with the dotnet CLI
     run: dotnet test --settings coverlet.runsettings --logger:trx
   - name: Sonarqube end
     run: dotnet /opt/sonar-scanner-msbuild-5.4.1.41282-net5.0/SonarScanner.MSBuild.dll end /d:sonar.login=${{ secrets.SONAR_TOKEN }}

 docker-build-and-push:
  name: Docker Build And Push
  runs-on: [self-hosted, onprem]

  steps:
   - name: Checkout code
     uses: actions/checkout@v2.2.0
   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v1
   - name: Login to DockerHub
     uses: docker/login-action@v1
     with:
      username: ${{ secrets.DOCKERHUB_USERNAME }}
      password: ${{ secrets.DOCKERHUB_TOKEN }}
   - name: Build and push
     uses: docker/build-push-action@v2
     with:
      push: true
      tags: ${{ secrets.DOCKERHUB_USERNAME }}/blms:${{ github.sha }}

 deploy-app-dev:
  name: Deploy App to Dev Rancher Cluster
  runs-on: [self-hosted, onprem]
  needs: [docker-build-and-push, run-sonarqube-scan]

  steps:
   - name: Checkout code
     uses: actions/checkout@v2.2.0
   - name: set KUBECONFIG
     run: |
      export KUBECONFIG=/home/devopsteam/workspace/kube-configs/blms-dev-github-sa-kubeconfig.yml
      sed -i "s/<IMAGE_VERSION>/${{ github.sha }}/g" blms-deployment-dev.yml    
      kubectl -n tech-coe-dev apply -f blms-deployment-dev.yml


